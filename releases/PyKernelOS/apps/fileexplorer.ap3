import os
import platform

current_path = os.getcwd()

def show_files(path):
    files = os.listdir(path)
    print("\n[fileexplorer.ap3]:")
    for file in files:
        print(f"[files]: {file}")

def change_directory(new_path):
    global current_path
    if new_path == "..":
        current_path = os.path.dirname(current_path)
    else:
        new_path = os.path.join(current_path, new_path)
        if os.path.exists(new_path) and os.path.isdir(new_path):
            current_path = new_path
        else:
            print(f"[Error]: {new_path} is not a valid directory.")

def delete_file(file_path):
    try:
        file_path = os.path.join(current_path, file_path)
        if os.path.exists(file_path):
            if os.path.isfile(file_path):
                os.remove(file_path)
                print(f"[Success]: File {file_path} deleted.")
            elif os.path.isdir(file_path):
                os.rmdir(file_path)
                print(f"[Success]: Directory {file_path} deleted.")
        else:
            print(f"[Error]: {file_path} does not exist.")
    except Exception as e:
        print(f"[Error]: Deleting {file_path}: {e}")

def make_directory(directory_name):
    try:
        new_dir_path = os.path.join(current_path, directory_name)
        os.mkdir(new_dir_path)
        print(f"[Success]: Directory {new_dir_path} created.")
    except Exception as e:
        print(f"[Error]: Creating directory: {e}")

def create_file(file_name):
    try:
        new_file_path = os.path.join(current_path, file_name)
        with open(new_file_path, 'w') as new_file:
            new_file.write("")
        print(f"[Success]: File {new_file_path} created.")
    except Exception as e:
        print(f"[Error]: Creating file: {e}")

def enter_path():
    global current_path
    new_path = input("[Enter Path]: ")
    if os.path.exists(new_path) and os.path.isdir(new_path):
        current_path = new_path
    else:
        print("[Error]: Invalid path.")

def help_command():
    print("\nCommands:")
    print("[ help ] - Display help information")
    print("[ cd %directory ] - Change directory (use '..' to go one directory parent down)")
    print("[ del %file or folder name or path ] - Delete files and folders")
    print("[ md %directory name ] - Make a new directory")
    print("[ touch %file name ] - Create a new file")
    print("[ path ] - Enter a path to navigate to")
    print("[ ls ] - List files and folders in the current directory")
    print("[ exit ] - Exit the file explorer")

def clear_screen():
    if platform.system() == "Windows":
        os.system("cls")
    else:
        os.system("clear")

while True:
    show_files(current_path)
    user_input = input(f"[{__file__}] > ").split(" ", 1)
    command = user_input[0].lower()

    clear_screen()

    if command == "help":
        help_command()

    elif command == "cd":
        if len(user_input) > 1:
            change_directory(user_input[1])
        else:
            print("[Error]: Please provide a directory name.")

    elif command == "del":
        if len(user_input) > 1:
            delete_file(user_input[1])
        else:
            print("[Error]: Please provide a file or folder name.")

    elif command == "md":
        if len(user_input) > 1:
            make_directory(user_input[1])
        else:
            print("[Error]: Please provide a directory name.")

    elif command == "touch":
        if len(user_input) > 1:
            create_file(user_input[1])
        else:
            print("[Error]: Please provide a file name.")

    elif command == "path":
        enter_path()

    elif command == "ls":
        show_files(current_path)

    elif command == "exit":
        print("[fileexplorer.ap3]: exiting")
        break

    else:
        print("[Error]: Unknown command. Type 'help' for a list of commands.")
